
.use_base_container: &use_base_container
  stage: test
  image: "${CI_REGISTRY_IMAGE}:latest"
  services:
    - name: docker:dind
      alias: docker

.run_test: &run_test
  <<: *use_base_container
  script:
    - pip3 install -e .
    - cp .env.example .env
    - pytest -s $TEST_PATH
  tags:
    - p40
    - x86
  rules:
    - if: $CI_COMMIT_BRANCH
      when: on_success

🛠️ tools reconnaissance/filesystem:
  <<: *run_test
  variables:
    TEST_PATH: tests/tools/reconnaissance/test_filesystem.py

🏗️ architecture test_architecture_core:
  <<: *run_test
  variables:
    TEST_PATH: tests/architecture/test_core.py

🏗️ architecture test_architecture_util:
  <<: *run_test
  variables:
    TEST_PATH: tests/architecture/test_util.py

# 🏗️ architecture test_architecture_vectordb:
#   <<: *run_test
#   variables:
#     TEST_PATH: tests/architecture/test_vectordb.py

🤖 agents test_agents_filesystem:
  <<: *run_test
  variables:
    TEST_PATH: tests/agents/test_agent_filesystem.py

🤖 agents test_agents_models:
  <<: *run_test
  variables:
    TEST_PATH: tests/agents/test_agent_models.py

🤖 agents test_agents_state:
  <<: *run_test
  variables:
    TEST_PATH: tests/agents/test_agents_state.py

 💭 prompts test_prompts_master_template:
  <<: *run_test
  variables:
    TEST_PATH: tests/agents/prompts/test_master_prompt.py